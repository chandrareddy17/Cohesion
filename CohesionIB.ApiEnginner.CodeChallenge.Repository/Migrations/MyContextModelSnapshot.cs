// <auto-generated />
using System;
using CohesionIB.ApiEnginner.CodeChallenge.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CohesionIB.ApiEnginner.CodeChallenge.Repository.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CohesionIB.ApiEnginner.CodeChallenge.Repository.Models.Device", b =>
                {
                    b.Property<long>("DeviceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DeviceID");

                    b.HasIndex("UserId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            DeviceID = 10000000002L,
                            DeviceName = "Lenovo Laptop",
                            UserId = 1
                        },
                        new
                        {
                            DeviceID = 10000000003L,
                            DeviceName = "iPad",
                            UserId = 2
                        },
                        new
                        {
                            DeviceID = 10000000004L,
                            DeviceName = "iPhone",
                            UserId = 2
                        },
                        new
                        {
                            DeviceID = 10000000005L,
                            DeviceName = "Samsung",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("CohesionIB.ApiEnginner.CodeChallenge.Repository.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsTermsAccepted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            IsTermsAccepted = false,
                            Password = "silkyfinch",
                            UserName = "david.smith"
                        },
                        new
                        {
                            UserId = 2,
                            IsTermsAccepted = false,
                            Password = "Ack777!",
                            UserName = "john.welbourne"
                        },
                        new
                        {
                            UserId = 3,
                            IsTermsAccepted = false,
                            Password = "paraclete12!",
                            UserName = "micheal.page"
                        });
                });

            modelBuilder.Entity("CohesionIB.ApiEnginner.CodeChallenge.Repository.Models.UserInvitationCode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DeviceId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("InvitationCode")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DeviceId");

                    b.HasIndex("UserId");

                    b.ToTable("UserInvitationCodes");
                });

            modelBuilder.Entity("CohesionIB.ApiEnginner.CodeChallenge.Repository.Models.Device", b =>
                {
                    b.HasOne("CohesionIB.ApiEnginner.CodeChallenge.Repository.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CohesionIB.ApiEnginner.CodeChallenge.Repository.Models.UserInvitationCode", b =>
                {
                    b.HasOne("CohesionIB.ApiEnginner.CodeChallenge.Repository.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.HasOne("CohesionIB.ApiEnginner.CodeChallenge.Repository.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
